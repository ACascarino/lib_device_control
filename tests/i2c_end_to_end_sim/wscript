def configure(conf):
    conf.load('xwaf.compiler_xcc')


def build(bld):
    bld.env.TARGET_ARCH = 'XCORE-200-EXPLORER'
    bld.env.XCC_FLAGS = ['-Wall', '-g', '-O2', '-report', '-DUSE_I2C=1']

    depends_on = ['lib_logging', 'lib_device_control', 'lib_i2c']

    root = bld.path.parent.parent.parent
    ldc = root.find_dir('lib_device_control/lib_device_control')
    includes = [ldc.find_dir('host')]

    # Build our program
    sources = bld.path.ant_glob(['src/**/*.xc']) + [
        ldc.find_resource('host/device_access_i2c_xcore.xc')
    ]
    prog = bld.program(
        source=sources,
        depends_on=depends_on,
        includes=includes)


# TARGET = XCORE-200-EXPLORER
# XCC_FLAGS = -Wall -g -O2 -report -DUSE_I2C=1
# MODULE_PATH = ../../..
#
# all:
# 	mkdir -p bin
# 	xcc ${XCC_FLAGS} -Isrc -I$(MODULE_PATH)/lib_i2c/lib_i2c/api/ -I$(MODULE_PATH)/lib_logging/lib_logging/api/ -I$(MODULE_PATH)/lib_device_control/lib_device_control/src/ -I$(MODULE_PATH)/lib_device_control/lib_device_control/api/ -I$(MODULE_PATH)/lib_device_control/lib_device_control/host/  -target=${TARGET} src/main.xc src/app_host.xc src/app_device.xc $(MODULE_PATH)/lib_i2c/lib_i2c/src/i2c_slave.xc $(MODULE_PATH)/lib_i2c/lib_i2c/src/i2c_master.xc $(MODULE_PATH)/lib_device_control/lib_device_control/src/control.xc $(MODULE_PATH)/lib_device_control/lib_device_control/src/resource_table.xc $(MODULE_PATH)/lib_device_control/lib_device_control/host/device_access_i2c_xcore.xc -o bin/i2c_end_to_end_sim.xe
#
# allconfigs: all
#
# report_modules:
# 	@echo '**-modules-**'
#
# clean:
# 	rm -rf bin
